
    int i;
	unsigned int mask = 1 << (wordsize - 1);
	unsigned int curr = 0;
	for (i= 0; i < wordsize; i++) {
        // print _ every 4 digits: ie. every 16 bits
        if (((wordsize - i) % 16 == 0) && ((wordsize-i)!= 0) && !(wordsize%16==0 && i == 0)) {
            //printf("%d", wordsize-i);
            putchar('_');
        }
        // keep track of the current hex digit
        // check if the current bit is 1
        else if (n & mask) {
            curr = curr << 1;
            curr = curr | 1;
        }
        // if the current bit is 0
        else {
            //puts("n & mask is false");
            curr = curr << 1;
        }
        mask = mask >> 1;
        // print the current hex digit every 4 bits
        if (((wordsize-i-1)%4==0) && (i!= 0) || ((wordsize-i-1 < 4) && (i == wordsize-1))){
            if (curr < 10) {
                putchar(curr + '0');
            } else {
                putchar(curr - 10 + 'a');
            }
            curr = 0;
        }

    }